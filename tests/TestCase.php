<?php

namespace Codrasil\Mediabox\Tests;

use PHPUnit\Framework\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    /**
     * The path to test.
     *
     * @var string
     */
    protected $path;

    /** setup */
    public function setUp(): void
    {
        parent::setUp();
    }

    /** remove test files */
    public function tearDown(): void
    {
        parent::tearDown();
    }

    /**
     * Add files and folders from given path.
     *
     * @param  string $path
     * @return void
     */
    public function addDummyFilesAndFolders($path): void
    {
        $this->removeFilesAndFolders($path);

        file_put_contents("$path/sample.txt", 'generated by running phpunit');

        $dir = "$path/Samples";

        if (! file_exists($dir)) {
            @mkdir($dir, 0777, true);
        }
    }

    /**
     * Remove all files and folders from given path.
     *
     * @param  string $path
     * @return void
     */
    public function removeFilesAndFolders($path): void
    {
        array_map('unlink', glob("{$path}/*.*"));
        $it = new \RecursiveDirectoryIterator($path, \FilesystemIterator::SKIP_DOTS);
        $it = new \RecursiveIteratorIterator($it, \RecursiveIteratorIterator::CHILD_FIRST);

        foreach($it as $file) {
            if ($file->isDir()) {
                rmdir($file->getPathname());
            } else {
                unlink($file->getPathname());
            }
        }
    }

	/**
	 * @param  array $paths
	 * @return void
	 */
	public function assertFilesNotExists($paths)
	{
		foreach ($paths as $path) {
			$this->assertFileNotExists($path);
		}
	}
}
